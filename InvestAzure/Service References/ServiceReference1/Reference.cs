//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace InvestAzure.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/InvestAzure.Web")]
    public partial class Employee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> IdDeptoField;
        
        private int IdEmpleadoField;
        
        private string fechaIngresoField;
        
        private string fotoStrField;
        
        private string nbrEmpleadoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdDepto {
            get {
                return this.IdDeptoField;
            }
            set {
                if ((this.IdDeptoField.Equals(value) != true)) {
                    this.IdDeptoField = value;
                    this.RaisePropertyChanged("IdDepto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEmpleado {
            get {
                return this.IdEmpleadoField;
            }
            set {
                if ((this.IdEmpleadoField.Equals(value) != true)) {
                    this.IdEmpleadoField = value;
                    this.RaisePropertyChanged("IdEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fechaIngreso {
            get {
                return this.fechaIngresoField;
            }
            set {
                if ((object.ReferenceEquals(this.fechaIngresoField, value) != true)) {
                    this.fechaIngresoField = value;
                    this.RaisePropertyChanged("fechaIngreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fotoStr {
            get {
                return this.fotoStrField;
            }
            set {
                if ((object.ReferenceEquals(this.fotoStrField, value) != true)) {
                    this.fotoStrField = value;
                    this.RaisePropertyChanged("fotoStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nbrEmpleado {
            get {
                return this.nbrEmpleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.nbrEmpleadoField, value) != true)) {
                    this.nbrEmpleadoField = value;
                    this.RaisePropertyChanged("nbrEmpleado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/InvestAzure.Web")]
    public partial class Department : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdDeptoField;
        
        private System.Nullable<int> idEncargadoField;
        
        private string nbrDeptoField;
        
        private string ubicacionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDepto {
            get {
                return this.IdDeptoField;
            }
            set {
                if ((this.IdDeptoField.Equals(value) != true)) {
                    this.IdDeptoField = value;
                    this.RaisePropertyChanged("IdDepto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> idEncargado {
            get {
                return this.idEncargadoField;
            }
            set {
                if ((this.idEncargadoField.Equals(value) != true)) {
                    this.idEncargadoField = value;
                    this.RaisePropertyChanged("idEncargado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nbrDepto {
            get {
                return this.nbrDeptoField;
            }
            set {
                if ((object.ReferenceEquals(this.nbrDeptoField, value) != true)) {
                    this.nbrDeptoField = value;
                    this.RaisePropertyChanged("nbrDepto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ubicacion {
            get {
                return this.ubicacionField;
            }
            set {
                if ((object.ReferenceEquals(this.ubicacionField, value) != true)) {
                    this.ubicacionField = value;
                    this.RaisePropertyChanged("ubicacion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISService")]
    public interface ISService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/GetAllEmp", ReplyAction="http://tempuri.org/ISService/GetAllEmpResponse")]
        System.IAsyncResult BeginGetAllEmp(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> EndGetAllEmp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/GetAllDep", ReplyAction="http://tempuri.org/ISService/GetAllDepResponse")]
        System.IAsyncResult BeginGetAllDep(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department> EndGetAllDep(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/DelEmp", ReplyAction="http://tempuri.org/ISService/DelEmpResponse")]
        System.IAsyncResult BeginDelEmp(int id, System.AsyncCallback callback, object asyncState);
        
        bool EndDelEmp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/DelDep", ReplyAction="http://tempuri.org/ISService/DelDepResponse")]
        System.IAsyncResult BeginDelDep(int id, System.AsyncCallback callback, object asyncState);
        
        bool EndDelDep(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/ExecProcedure", ReplyAction="http://tempuri.org/ISService/ExecProcedureResponse")]
        System.IAsyncResult BeginExecProcedure(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndExecProcedure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/getEmployees", ReplyAction="http://tempuri.org/ISService/getEmployeesResponse")]
        System.IAsyncResult BegingetEmployees(int name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> EndgetEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/GetDepIdbyName", ReplyAction="http://tempuri.org/ISService/GetDepIdbyNameResponse")]
        System.IAsyncResult BeginGetDepIdbyName(string name, System.AsyncCallback callback, object asyncState);
        
        InvestAzure.ServiceReference1.Department EndGetDepIdbyName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/GetEmpByName", ReplyAction="http://tempuri.org/ISService/GetEmpByNameResponse")]
        System.IAsyncResult BeginGetEmpByName(string name, System.AsyncCallback callback, object asyncState);
        
        InvestAzure.ServiceReference1.Employee EndGetEmpByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/insertDep", ReplyAction="http://tempuri.org/ISService/insertDepResponse")]
        System.IAsyncResult BegininsertDep(string name, int enc, string ubic, System.AsyncCallback callback, object asyncState);
        
        bool EndinsertDep(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/insertEmp", ReplyAction="http://tempuri.org/ISService/insertEmpResponse")]
        System.IAsyncResult BegininsertEmp(string name, int idDep, string fechaIngreso, string foto, System.AsyncCallback callback, object asyncState);
        
        bool EndinsertEmp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/updateDep", ReplyAction="http://tempuri.org/ISService/updateDepResponse")]
        System.IAsyncResult BeginupdateDep(int iD, string name, int enc, string ubic, System.AsyncCallback callback, object asyncState);
        
        bool EndupdateDep(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISService/updateEmp", ReplyAction="http://tempuri.org/ISService/updateEmpResponse")]
        System.IAsyncResult BeginupdateEmp(int iD, string name, int dep, string dir, string fecha, System.AsyncCallback callback, object asyncState);
        
        bool EndupdateEmp(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISServiceChannel : InvestAzure.ServiceReference1.ISService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllDepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DelEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelDepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DelDepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDepIdbyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDepIdbyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public InvestAzure.ServiceReference1.Department Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((InvestAzure.ServiceReference1.Department)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmpByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmpByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public InvestAzure.ServiceReference1.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((InvestAzure.ServiceReference1.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class insertDepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public insertDepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class insertEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public insertEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateDepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateDepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SServiceClient : System.ServiceModel.ClientBase<InvestAzure.ServiceReference1.ISService>, InvestAzure.ServiceReference1.ISService {
        
        private BeginOperationDelegate onBeginGetAllEmpDelegate;
        
        private EndOperationDelegate onEndGetAllEmpDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllEmpCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDepDelegate;
        
        private EndOperationDelegate onEndGetAllDepDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDepCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelEmpDelegate;
        
        private EndOperationDelegate onEndDelEmpDelegate;
        
        private System.Threading.SendOrPostCallback onDelEmpCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelDepDelegate;
        
        private EndOperationDelegate onEndDelDepDelegate;
        
        private System.Threading.SendOrPostCallback onDelDepCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecProcedureDelegate;
        
        private EndOperationDelegate onEndExecProcedureDelegate;
        
        private System.Threading.SendOrPostCallback onExecProcedureCompletedDelegate;
        
        private BeginOperationDelegate onBegingetEmployeesDelegate;
        
        private EndOperationDelegate onEndgetEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback ongetEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDepIdbyNameDelegate;
        
        private EndOperationDelegate onEndGetDepIdbyNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetDepIdbyNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmpByNameDelegate;
        
        private EndOperationDelegate onEndGetEmpByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmpByNameCompletedDelegate;
        
        private BeginOperationDelegate onBegininsertDepDelegate;
        
        private EndOperationDelegate onEndinsertDepDelegate;
        
        private System.Threading.SendOrPostCallback oninsertDepCompletedDelegate;
        
        private BeginOperationDelegate onBegininsertEmpDelegate;
        
        private EndOperationDelegate onEndinsertEmpDelegate;
        
        private System.Threading.SendOrPostCallback oninsertEmpCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateDepDelegate;
        
        private EndOperationDelegate onEndupdateDepDelegate;
        
        private System.Threading.SendOrPostCallback onupdateDepCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateEmpDelegate;
        
        private EndOperationDelegate onEndupdateEmpDelegate;
        
        private System.Threading.SendOrPostCallback onupdateEmpCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SServiceClient() {
        }
        
        public SServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAllEmpCompletedEventArgs> GetAllEmpCompleted;
        
        public event System.EventHandler<GetAllDepCompletedEventArgs> GetAllDepCompleted;
        
        public event System.EventHandler<DelEmpCompletedEventArgs> DelEmpCompleted;
        
        public event System.EventHandler<DelDepCompletedEventArgs> DelDepCompleted;
        
        public event System.EventHandler<ExecProcedureCompletedEventArgs> ExecProcedureCompleted;
        
        public event System.EventHandler<getEmployeesCompletedEventArgs> getEmployeesCompleted;
        
        public event System.EventHandler<GetDepIdbyNameCompletedEventArgs> GetDepIdbyNameCompleted;
        
        public event System.EventHandler<GetEmpByNameCompletedEventArgs> GetEmpByNameCompleted;
        
        public event System.EventHandler<insertDepCompletedEventArgs> insertDepCompleted;
        
        public event System.EventHandler<insertEmpCompletedEventArgs> insertEmpCompleted;
        
        public event System.EventHandler<updateDepCompletedEventArgs> updateDepCompleted;
        
        public event System.EventHandler<updateEmpCompletedEventArgs> updateEmpCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginGetAllEmp(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllEmp(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> InvestAzure.ServiceReference1.ISService.EndGetAllEmp(System.IAsyncResult result) {
            return base.Channel.EndGetAllEmp(result);
        }
        
        private System.IAsyncResult OnBeginGetAllEmp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginGetAllEmp(callback, asyncState);
        }
        
        private object[] OnEndGetAllEmp(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndGetAllEmp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllEmpCompleted(object state) {
            if ((this.GetAllEmpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllEmpCompleted(this, new GetAllEmpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllEmpAsync() {
            this.GetAllEmpAsync(null);
        }
        
        public void GetAllEmpAsync(object userState) {
            if ((this.onBeginGetAllEmpDelegate == null)) {
                this.onBeginGetAllEmpDelegate = new BeginOperationDelegate(this.OnBeginGetAllEmp);
            }
            if ((this.onEndGetAllEmpDelegate == null)) {
                this.onEndGetAllEmpDelegate = new EndOperationDelegate(this.OnEndGetAllEmp);
            }
            if ((this.onGetAllEmpCompletedDelegate == null)) {
                this.onGetAllEmpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllEmpCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllEmpDelegate, null, this.onEndGetAllEmpDelegate, this.onGetAllEmpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginGetAllDep(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllDep(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department> InvestAzure.ServiceReference1.ISService.EndGetAllDep(System.IAsyncResult result) {
            return base.Channel.EndGetAllDep(result);
        }
        
        private System.IAsyncResult OnBeginGetAllDep(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginGetAllDep(callback, asyncState);
        }
        
        private object[] OnEndGetAllDep(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department> retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndGetAllDep(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDepCompleted(object state) {
            if ((this.GetAllDepCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDepCompleted(this, new GetAllDepCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDepAsync() {
            this.GetAllDepAsync(null);
        }
        
        public void GetAllDepAsync(object userState) {
            if ((this.onBeginGetAllDepDelegate == null)) {
                this.onBeginGetAllDepDelegate = new BeginOperationDelegate(this.OnBeginGetAllDep);
            }
            if ((this.onEndGetAllDepDelegate == null)) {
                this.onEndGetAllDepDelegate = new EndOperationDelegate(this.OnEndGetAllDep);
            }
            if ((this.onGetAllDepCompletedDelegate == null)) {
                this.onGetAllDepCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDepCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDepDelegate, null, this.onEndGetAllDepDelegate, this.onGetAllDepCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginDelEmp(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelEmp(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool InvestAzure.ServiceReference1.ISService.EndDelEmp(System.IAsyncResult result) {
            return base.Channel.EndDelEmp(result);
        }
        
        private System.IAsyncResult OnBeginDelEmp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginDelEmp(id, callback, asyncState);
        }
        
        private object[] OnEndDelEmp(System.IAsyncResult result) {
            bool retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndDelEmp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelEmpCompleted(object state) {
            if ((this.DelEmpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DelEmpCompleted(this, new DelEmpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DelEmpAsync(int id) {
            this.DelEmpAsync(id, null);
        }
        
        public void DelEmpAsync(int id, object userState) {
            if ((this.onBeginDelEmpDelegate == null)) {
                this.onBeginDelEmpDelegate = new BeginOperationDelegate(this.OnBeginDelEmp);
            }
            if ((this.onEndDelEmpDelegate == null)) {
                this.onEndDelEmpDelegate = new EndOperationDelegate(this.OnEndDelEmp);
            }
            if ((this.onDelEmpCompletedDelegate == null)) {
                this.onDelEmpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelEmpCompleted);
            }
            base.InvokeAsync(this.onBeginDelEmpDelegate, new object[] {
                        id}, this.onEndDelEmpDelegate, this.onDelEmpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginDelDep(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelDep(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool InvestAzure.ServiceReference1.ISService.EndDelDep(System.IAsyncResult result) {
            return base.Channel.EndDelDep(result);
        }
        
        private System.IAsyncResult OnBeginDelDep(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginDelDep(id, callback, asyncState);
        }
        
        private object[] OnEndDelDep(System.IAsyncResult result) {
            bool retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndDelDep(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelDepCompleted(object state) {
            if ((this.DelDepCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DelDepCompleted(this, new DelDepCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DelDepAsync(int id) {
            this.DelDepAsync(id, null);
        }
        
        public void DelDepAsync(int id, object userState) {
            if ((this.onBeginDelDepDelegate == null)) {
                this.onBeginDelDepDelegate = new BeginOperationDelegate(this.OnBeginDelDep);
            }
            if ((this.onEndDelDepDelegate == null)) {
                this.onEndDelDepDelegate = new EndOperationDelegate(this.OnEndDelDep);
            }
            if ((this.onDelDepCompletedDelegate == null)) {
                this.onDelDepCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelDepCompleted);
            }
            base.InvokeAsync(this.onBeginDelDepDelegate, new object[] {
                        id}, this.onEndDelDepDelegate, this.onDelDepCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginExecProcedure(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecProcedure(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> InvestAzure.ServiceReference1.ISService.EndExecProcedure(System.IAsyncResult result) {
            return base.Channel.EndExecProcedure(result);
        }
        
        private System.IAsyncResult OnBeginExecProcedure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginExecProcedure(callback, asyncState);
        }
        
        private object[] OnEndExecProcedure(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndExecProcedure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecProcedureCompleted(object state) {
            if ((this.ExecProcedureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecProcedureCompleted(this, new ExecProcedureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecProcedureAsync() {
            this.ExecProcedureAsync(null);
        }
        
        public void ExecProcedureAsync(object userState) {
            if ((this.onBeginExecProcedureDelegate == null)) {
                this.onBeginExecProcedureDelegate = new BeginOperationDelegate(this.OnBeginExecProcedure);
            }
            if ((this.onEndExecProcedureDelegate == null)) {
                this.onEndExecProcedureDelegate = new EndOperationDelegate(this.OnEndExecProcedure);
            }
            if ((this.onExecProcedureCompletedDelegate == null)) {
                this.onExecProcedureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecProcedureCompleted);
            }
            base.InvokeAsync(this.onBeginExecProcedureDelegate, null, this.onEndExecProcedureDelegate, this.onExecProcedureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BegingetEmployees(int name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetEmployees(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> InvestAzure.ServiceReference1.ISService.EndgetEmployees(System.IAsyncResult result) {
            return base.Channel.EndgetEmployees(result);
        }
        
        private System.IAsyncResult OnBegingetEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int name = ((int)(inValues[0]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BegingetEmployees(name, callback, asyncState);
        }
        
        private object[] OnEndgetEmployees(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndgetEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetEmployeesCompleted(object state) {
            if ((this.getEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getEmployeesCompleted(this, new getEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getEmployeesAsync(int name) {
            this.getEmployeesAsync(name, null);
        }
        
        public void getEmployeesAsync(int name, object userState) {
            if ((this.onBegingetEmployeesDelegate == null)) {
                this.onBegingetEmployeesDelegate = new BeginOperationDelegate(this.OnBegingetEmployees);
            }
            if ((this.onEndgetEmployeesDelegate == null)) {
                this.onEndgetEmployeesDelegate = new EndOperationDelegate(this.OnEndgetEmployees);
            }
            if ((this.ongetEmployeesCompletedDelegate == null)) {
                this.ongetEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetEmployeesCompleted);
            }
            base.InvokeAsync(this.onBegingetEmployeesDelegate, new object[] {
                        name}, this.onEndgetEmployeesDelegate, this.ongetEmployeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginGetDepIdbyName(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDepIdbyName(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        InvestAzure.ServiceReference1.Department InvestAzure.ServiceReference1.ISService.EndGetDepIdbyName(System.IAsyncResult result) {
            return base.Channel.EndGetDepIdbyName(result);
        }
        
        private System.IAsyncResult OnBeginGetDepIdbyName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginGetDepIdbyName(name, callback, asyncState);
        }
        
        private object[] OnEndGetDepIdbyName(System.IAsyncResult result) {
            InvestAzure.ServiceReference1.Department retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndGetDepIdbyName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDepIdbyNameCompleted(object state) {
            if ((this.GetDepIdbyNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDepIdbyNameCompleted(this, new GetDepIdbyNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDepIdbyNameAsync(string name) {
            this.GetDepIdbyNameAsync(name, null);
        }
        
        public void GetDepIdbyNameAsync(string name, object userState) {
            if ((this.onBeginGetDepIdbyNameDelegate == null)) {
                this.onBeginGetDepIdbyNameDelegate = new BeginOperationDelegate(this.OnBeginGetDepIdbyName);
            }
            if ((this.onEndGetDepIdbyNameDelegate == null)) {
                this.onEndGetDepIdbyNameDelegate = new EndOperationDelegate(this.OnEndGetDepIdbyName);
            }
            if ((this.onGetDepIdbyNameCompletedDelegate == null)) {
                this.onGetDepIdbyNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDepIdbyNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetDepIdbyNameDelegate, new object[] {
                        name}, this.onEndGetDepIdbyNameDelegate, this.onGetDepIdbyNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginGetEmpByName(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmpByName(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        InvestAzure.ServiceReference1.Employee InvestAzure.ServiceReference1.ISService.EndGetEmpByName(System.IAsyncResult result) {
            return base.Channel.EndGetEmpByName(result);
        }
        
        private System.IAsyncResult OnBeginGetEmpByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginGetEmpByName(name, callback, asyncState);
        }
        
        private object[] OnEndGetEmpByName(System.IAsyncResult result) {
            InvestAzure.ServiceReference1.Employee retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndGetEmpByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmpByNameCompleted(object state) {
            if ((this.GetEmpByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmpByNameCompleted(this, new GetEmpByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmpByNameAsync(string name) {
            this.GetEmpByNameAsync(name, null);
        }
        
        public void GetEmpByNameAsync(string name, object userState) {
            if ((this.onBeginGetEmpByNameDelegate == null)) {
                this.onBeginGetEmpByNameDelegate = new BeginOperationDelegate(this.OnBeginGetEmpByName);
            }
            if ((this.onEndGetEmpByNameDelegate == null)) {
                this.onEndGetEmpByNameDelegate = new EndOperationDelegate(this.OnEndGetEmpByName);
            }
            if ((this.onGetEmpByNameCompletedDelegate == null)) {
                this.onGetEmpByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmpByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmpByNameDelegate, new object[] {
                        name}, this.onEndGetEmpByNameDelegate, this.onGetEmpByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BegininsertDep(string name, int enc, string ubic, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegininsertDep(name, enc, ubic, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool InvestAzure.ServiceReference1.ISService.EndinsertDep(System.IAsyncResult result) {
            return base.Channel.EndinsertDep(result);
        }
        
        private System.IAsyncResult OnBegininsertDep(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            int enc = ((int)(inValues[1]));
            string ubic = ((string)(inValues[2]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BegininsertDep(name, enc, ubic, callback, asyncState);
        }
        
        private object[] OnEndinsertDep(System.IAsyncResult result) {
            bool retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndinsertDep(result);
            return new object[] {
                    retVal};
        }
        
        private void OninsertDepCompleted(object state) {
            if ((this.insertDepCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.insertDepCompleted(this, new insertDepCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void insertDepAsync(string name, int enc, string ubic) {
            this.insertDepAsync(name, enc, ubic, null);
        }
        
        public void insertDepAsync(string name, int enc, string ubic, object userState) {
            if ((this.onBegininsertDepDelegate == null)) {
                this.onBegininsertDepDelegate = new BeginOperationDelegate(this.OnBegininsertDep);
            }
            if ((this.onEndinsertDepDelegate == null)) {
                this.onEndinsertDepDelegate = new EndOperationDelegate(this.OnEndinsertDep);
            }
            if ((this.oninsertDepCompletedDelegate == null)) {
                this.oninsertDepCompletedDelegate = new System.Threading.SendOrPostCallback(this.OninsertDepCompleted);
            }
            base.InvokeAsync(this.onBegininsertDepDelegate, new object[] {
                        name,
                        enc,
                        ubic}, this.onEndinsertDepDelegate, this.oninsertDepCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BegininsertEmp(string name, int idDep, string fechaIngreso, string foto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegininsertEmp(name, idDep, fechaIngreso, foto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool InvestAzure.ServiceReference1.ISService.EndinsertEmp(System.IAsyncResult result) {
            return base.Channel.EndinsertEmp(result);
        }
        
        private System.IAsyncResult OnBegininsertEmp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            int idDep = ((int)(inValues[1]));
            string fechaIngreso = ((string)(inValues[2]));
            string foto = ((string)(inValues[3]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BegininsertEmp(name, idDep, fechaIngreso, foto, callback, asyncState);
        }
        
        private object[] OnEndinsertEmp(System.IAsyncResult result) {
            bool retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndinsertEmp(result);
            return new object[] {
                    retVal};
        }
        
        private void OninsertEmpCompleted(object state) {
            if ((this.insertEmpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.insertEmpCompleted(this, new insertEmpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void insertEmpAsync(string name, int idDep, string fechaIngreso, string foto) {
            this.insertEmpAsync(name, idDep, fechaIngreso, foto, null);
        }
        
        public void insertEmpAsync(string name, int idDep, string fechaIngreso, string foto, object userState) {
            if ((this.onBegininsertEmpDelegate == null)) {
                this.onBegininsertEmpDelegate = new BeginOperationDelegate(this.OnBegininsertEmp);
            }
            if ((this.onEndinsertEmpDelegate == null)) {
                this.onEndinsertEmpDelegate = new EndOperationDelegate(this.OnEndinsertEmp);
            }
            if ((this.oninsertEmpCompletedDelegate == null)) {
                this.oninsertEmpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OninsertEmpCompleted);
            }
            base.InvokeAsync(this.onBegininsertEmpDelegate, new object[] {
                        name,
                        idDep,
                        fechaIngreso,
                        foto}, this.onEndinsertEmpDelegate, this.oninsertEmpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginupdateDep(int iD, string name, int enc, string ubic, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateDep(iD, name, enc, ubic, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool InvestAzure.ServiceReference1.ISService.EndupdateDep(System.IAsyncResult result) {
            return base.Channel.EndupdateDep(result);
        }
        
        private System.IAsyncResult OnBeginupdateDep(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iD = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            int enc = ((int)(inValues[2]));
            string ubic = ((string)(inValues[3]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginupdateDep(iD, name, enc, ubic, callback, asyncState);
        }
        
        private object[] OnEndupdateDep(System.IAsyncResult result) {
            bool retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndupdateDep(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateDepCompleted(object state) {
            if ((this.updateDepCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateDepCompleted(this, new updateDepCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateDepAsync(int iD, string name, int enc, string ubic) {
            this.updateDepAsync(iD, name, enc, ubic, null);
        }
        
        public void updateDepAsync(int iD, string name, int enc, string ubic, object userState) {
            if ((this.onBeginupdateDepDelegate == null)) {
                this.onBeginupdateDepDelegate = new BeginOperationDelegate(this.OnBeginupdateDep);
            }
            if ((this.onEndupdateDepDelegate == null)) {
                this.onEndupdateDepDelegate = new EndOperationDelegate(this.OnEndupdateDep);
            }
            if ((this.onupdateDepCompletedDelegate == null)) {
                this.onupdateDepCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateDepCompleted);
            }
            base.InvokeAsync(this.onBeginupdateDepDelegate, new object[] {
                        iD,
                        name,
                        enc,
                        ubic}, this.onEndupdateDepDelegate, this.onupdateDepCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult InvestAzure.ServiceReference1.ISService.BeginupdateEmp(int iD, string name, int dep, string dir, string fecha, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateEmp(iD, name, dep, dir, fecha, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool InvestAzure.ServiceReference1.ISService.EndupdateEmp(System.IAsyncResult result) {
            return base.Channel.EndupdateEmp(result);
        }
        
        private System.IAsyncResult OnBeginupdateEmp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int iD = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            int dep = ((int)(inValues[2]));
            string dir = ((string)(inValues[3]));
            string fecha = ((string)(inValues[4]));
            return ((InvestAzure.ServiceReference1.ISService)(this)).BeginupdateEmp(iD, name, dep, dir, fecha, callback, asyncState);
        }
        
        private object[] OnEndupdateEmp(System.IAsyncResult result) {
            bool retVal = ((InvestAzure.ServiceReference1.ISService)(this)).EndupdateEmp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateEmpCompleted(object state) {
            if ((this.updateEmpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateEmpCompleted(this, new updateEmpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateEmpAsync(int iD, string name, int dep, string dir, string fecha) {
            this.updateEmpAsync(iD, name, dep, dir, fecha, null);
        }
        
        public void updateEmpAsync(int iD, string name, int dep, string dir, string fecha, object userState) {
            if ((this.onBeginupdateEmpDelegate == null)) {
                this.onBeginupdateEmpDelegate = new BeginOperationDelegate(this.OnBeginupdateEmp);
            }
            if ((this.onEndupdateEmpDelegate == null)) {
                this.onEndupdateEmpDelegate = new EndOperationDelegate(this.OnEndupdateEmp);
            }
            if ((this.onupdateEmpCompletedDelegate == null)) {
                this.onupdateEmpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateEmpCompleted);
            }
            base.InvokeAsync(this.onBeginupdateEmpDelegate, new object[] {
                        iD,
                        name,
                        dep,
                        dir,
                        fecha}, this.onEndupdateEmpDelegate, this.onupdateEmpCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override InvestAzure.ServiceReference1.ISService CreateChannel() {
            return new SServiceClientChannel(this);
        }
        
        private class SServiceClientChannel : ChannelBase<InvestAzure.ServiceReference1.ISService>, InvestAzure.ServiceReference1.ISService {
            
            public SServiceClientChannel(System.ServiceModel.ClientBase<InvestAzure.ServiceReference1.ISService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAllEmp(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllEmp", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> EndGetAllEmp(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> _result = ((System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee>)(base.EndInvoke("GetAllEmp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllDep(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllDep", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department> EndGetAllDep(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department> _result = ((System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Department>)(base.EndInvoke("GetAllDep", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelEmp(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DelEmp", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDelEmp(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DelEmp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelDep(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DelDep", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDelDep(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DelDep", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExecProcedure(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ExecProcedure", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndExecProcedure(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("ExecProcedure", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetEmployees(int name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("getEmployees", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> EndgetEmployees(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee> _result = ((System.Collections.ObjectModel.ObservableCollection<InvestAzure.ServiceReference1.Employee>)(base.EndInvoke("getEmployees", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDepIdbyName(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetDepIdbyName", _args, callback, asyncState);
                return _result;
            }
            
            public InvestAzure.ServiceReference1.Department EndGetDepIdbyName(System.IAsyncResult result) {
                object[] _args = new object[0];
                InvestAzure.ServiceReference1.Department _result = ((InvestAzure.ServiceReference1.Department)(base.EndInvoke("GetDepIdbyName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmpByName(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetEmpByName", _args, callback, asyncState);
                return _result;
            }
            
            public InvestAzure.ServiceReference1.Employee EndGetEmpByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                InvestAzure.ServiceReference1.Employee _result = ((InvestAzure.ServiceReference1.Employee)(base.EndInvoke("GetEmpByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegininsertDep(string name, int enc, string ubic, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = name;
                _args[1] = enc;
                _args[2] = ubic;
                System.IAsyncResult _result = base.BeginInvoke("insertDep", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndinsertDep(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("insertDep", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegininsertEmp(string name, int idDep, string fechaIngreso, string foto, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = name;
                _args[1] = idDep;
                _args[2] = fechaIngreso;
                _args[3] = foto;
                System.IAsyncResult _result = base.BeginInvoke("insertEmp", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndinsertEmp(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("insertEmp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateDep(int iD, string name, int enc, string ubic, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = iD;
                _args[1] = name;
                _args[2] = enc;
                _args[3] = ubic;
                System.IAsyncResult _result = base.BeginInvoke("updateDep", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndupdateDep(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("updateDep", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateEmp(int iD, string name, int dep, string dir, string fecha, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = iD;
                _args[1] = name;
                _args[2] = dep;
                _args[3] = dir;
                _args[4] = fecha;
                System.IAsyncResult _result = base.BeginInvoke("updateEmp", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndupdateEmp(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("updateEmp", _args, result)));
                return _result;
            }
        }
    }
}
